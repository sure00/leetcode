class Solution(object):
    def solveNQueens(self, n):
        """
        :type n: int
        :rtype: List[List[str]]
        """
        res = []
        self.index = [-1] * n
        
        def isValid(row, column) :
            for k in range(0, row) :
                if self.index[k] == column :
                    return False
                if self.index[k] + k == row + column:
                    return False
                if self.index[k] - k == column - row:
                    return False
            return True    
        
        def dfs(row, arr):
            if row == n :
                res.append(arr)
            
            """
            :row by row to set value
            """
            for j in xrange(n) :
                if isValid(row, j) :
                    self.index[row] = j
                    dfs(row+1, arr + ["." * j +"Q"+ "."*(n-j-1)])
        dfs(0, [])
        
        return res
