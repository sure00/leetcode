# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def DFSDep(self, root):
        if root is None:
            return 0
        depLeft = self.DFSDep(root.left)
        if depLeft == -1:
            return -1
        depRight=self.DFSDep(root.right)
        if depRight == -1:
            return -1
        if abs(depLeft - depRight) > 1:
            return -1
        
        return max(depLeft, depRight) +1
        
    def isBalanced(self, root):
        """
        :type root: TreeNode
        :rtype: bool
        """
        return self.DFSDep(root)!=-1
