# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def inorderTraversal(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        cur = root
        ret = []
        
        while(cur is not None):
            if cur.left is  None:
                ret.append(cur.val)
                cur = cur.right
            else:
                #find the previous ances of cur
                pre = cur.left
                while (pre.right is not None and pre.right is not cur):
                    pre = pre.right
                if pre.right == None:
                    pre.right=cur
                    cur = cur.left
                else:
                    pre.right=None
                    ret.append(cur.val)
                    cur = cur.right
        return ret
