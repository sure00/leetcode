class Solution {
public:
    int strStr(string haystack, string needle) {
        int needle_len = needle.length(), hays_len = haystack.length();
        
        if(needle_len == 0)
            return 0;
        
        vector<int> next(needle.length());
        createNext(needle, next, needle_len);
        for(int i=0, j=0; i< hays_len;) {
            if(haystack[i]==needle[j]){
                i++;
                j++;
            }
            if (j== needle_len)
                return i-j;
            if(i < hays_len && haystack[i]!=needle[j]){
                if(j)
                    j = next[j-1];
                else
                    i++;
            }
            
        }
        return -1;
    }
    
    void createNext(string needle, vector<int> &next, int len){
        int i;
        next[0]=0;
        
        for(i=1;i<len;i++){
            int k=next[i-1];
            while(needle[i]!= needle[k] && k!=0)
                k=next[k-1];
            
            if (needle[i]==needle[k])
                next[i]=k+1;
            else
                next[i]=0;
        }
    }
    
};
