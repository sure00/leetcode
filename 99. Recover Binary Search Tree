# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    prev = None
    p1 = None
    p2 = None
    
    def inorder(self, root):
        if root == None:
            return 
        else:
            self.inorder(root.left)
            if self.prev == None:
                self.prev = root
            else:
                if root.val <= self.prev.val:
                    if self.p1 == None:
                        self.p1 = self.prev
                    self.p2 = root
                self.prev = root
            self.inorder(root.right)
        
    
    def recoverTree(self, root):
        """
        :type root: TreeNode
        :rtype: void Do not return anything, modify root in-place instead.
        """
        self.p1 = None
        self.p2 = None
        self.prev = None
        
        self.inorder(root)
        tmp = self.p1.val
        self.p1.val = self.p2.val
        self.p2.val = tmp
        
