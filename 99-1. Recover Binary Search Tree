# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    first=None
    middle=None
    last=None
    pre=None
    
    def InorderTrave(self, root):
        if root:
            self.InorderTrave(root.left)
            
            if self.pre != None:
                if self.pre.val > root.val:
                    if self.first ==None:
                        self.first = self.pre
                        self.middle=root
                    else:
                        self.last = root
            
            self.pre=root
            
            self.InorderTrave(root.right)
    def swap(self, a, b):
        tmp=a.val
        a.val=b.val
        b.val=tmp
    
    def recoverTree(self, root):
        """
        :type root: TreeNode
        :rtype: void Do not return anything, modify root in-place instead.
        """
        self.InorderTrave(root)
        
        if self.last != None:
            self.swap(self.first, self.last)
        else:
            self.swap(self.first, self.middle)
