# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):

    def sortedarrToBst(self, arr):
            if len(arr) == 0:
                return
            l =len(arr)
            root = TreeNode(arr[l/2])
            root.left = self.sortedarrToBst(arr[:l/2])
            root.right =self.sortedarrToBst(arr[l/2+1:])
            return root
            
    def sortedListToBST(self, head):
        """
        :type head: ListNode
        :rtype: TreeNode
        """
        
        arr = []
        p = head
        while p:
            arr.append(p.val)
            p = p.next
            
        return self.sortedarrToBst(arr)
