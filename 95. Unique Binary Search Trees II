# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def dfs(self, start, end):
        result=[]
        if start > end:
            result.append(None)
            return result
        for root in range(start, end+1):
            left= self.dfs(start, root-1)
            right=self.dfs(root+1,end)
            for l in left:
                for r in right:
                    node=TreeNode(root)
                    node.left=l
                    node.right=r
                    result.append(node)
        return result
        
    
    def generateTrees(self, n):
        """
        :type n: int
        :rtype: List[TreeNode]
        """
        if n ==0:
            return []
        return self.dfs(1,n)
