/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        if (lists.empty())
            return nullptr;
        
        ListNode *p=lists[0];
        for(int i=1;i<lists.size();i++){
            p=mergeTwoLists(p,lists[i]);
        }
        return p;
    }
    
    ListNode* mergeTwoLists(ListNode *l1, ListNode *l2) {
        ListNode Head(-1);
        ListNode *p=&Head;
        
        for(p; l1!=nullptr && l2!=nullptr;p=p->next) {
            if (l1->val <= l2->val){
                p->next=l1;
                l1=l1->next;
            }
            else{
                p->next=l2;
                l2=l2->next;
            }
        }
        if(l1==nullptr && l2!=nullptr)
            p->next=l2;
        if(l1!=nullptr && l2==nullptr)
            p->next=l1;
            
        return Head.next;
    }
};
