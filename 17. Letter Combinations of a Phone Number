class Solution(object):
    def letterCombinations(self, digits):
        """
        :type digits: str
        :rtype: List[str]
        """
        
        dict = {'0':[' '],
                '1':[''],
                '2':['a','b','c'],
                '3':['d','e','f'],
                '4':['g','h','i'],
                '5':['j','k','l'],
                '6':['m','n','o'],
                '7':['p','q','r','s'],
                '8':['t','u','v'],
                '9':['w','x','y','z']
            }
        
        res = []
        
        def dfs(num, arr):
            if num == length :
                if length != 0:
                    res.append(arr)
                return
            
            for letter in dict[digits[num]] :
                dfs(num+1, arr + letter)
        
        
        length = len(digits)
        dfs(0, '')
        
        return res
