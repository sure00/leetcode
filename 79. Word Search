class Solution {
public:
    bool dfs(vector<vector<char>>& board,  string word, int i, int j, int index){
        if(index == word.size())
            return true;
        if(i<0||j<0||i>=board.size()|| j>=board[0].size())
            return false;
        
        if(board[i][j] == '#'  || board[i][j] != word[index])
            return false;
                
        char tmp = board[i][j];
        board[i][j]='#';
        
        bool  ret = dfs(board, word, i+1,j, index+1) ||dfs(board, word, i-1,j, index+1) || dfs(board, word, i,j+1, index+1) || dfs(board, word, i,j-1, index+1);
        
        board[i][j]=tmp;
        return ret;
    }
    
    
    bool exist(vector<vector<char>>& board, string word) {
        int n = board.size();
        if (n == 0) return false;
        int m = board[0].size();
        if (m == 0) return false;
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(board[i][j]==word[0]){
                    if(dfs(board, word, i, j, 0))
                        return true;
                } 
            }
        }
        
        return false;
    }
};
