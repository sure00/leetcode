# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def detectCycle(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        entry = head
        slow = fast = head
        
        while(fast != None and fast.next != None):
            slow=slow.next
            fast=fast.next.next
            if(slow==fast):
                while(slow!=entry):
                    entry=entry.next
                    slow=slow.next
                return entry
        return None
