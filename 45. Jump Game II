class Solution(object):
    def jump(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        dist,golePos, step = 0, 0, 0
        start, end = 0,0
        
        while end < len(nums)-1 :
            step+=1
            for i in range(start, end+1):
                dist = max(dist, i+nums[i])
                
            start = end+1
            end = dist
        
        return step
"""
class Solution(object):
    def jump(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        dist,golePos, step = 0, 0, 0
        dest = nums[len(nums)-1]-1

        
        if len(nums) == 1:
            return 0
        
        for i in xrange(len(nums)) :
            if dist < i:
                return False
                
            dist = max(dist, i + nums[i])
            if i == golePos :
                step +=1
                golePos = dist
            
    
        return count
"""
