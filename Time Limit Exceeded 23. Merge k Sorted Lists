/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        if (lists.empty())
            return nullptr;
        
        ListNode *p=lists[0];
        for(int i=1;i<lists.size();i++){
            p=mergeTwoLists(p,lists[i]);
        }
        return p;
    }
    
    ListNode* mergeTwoLists(ListNode *l1, ListNode *l2) {
        ListNode Head(-1);
        
        for(ListNode *p=&Head; l1!=nullptr || l2!=nullptr;p=p->next) {
            int val1=l1==nullptr?INT_MAX:l1->val;
            int val2=l2==nullptr?INT_MAX:l2->val;
            
            if (val1 < val2){
                p->next=l1;
                l1=l1->next;
            }
            else{
                p->next=l2;
                l2=l2->next;
            }
        }
        return Head.next;
    }
};
